"""
Django settings for renaissance project.

Generated by 'django-admin startproject' using Django 2.2.9.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import dj_database_url

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
#SECRET_KEY = '39mi+8fdxu3%3(#ewy1-4)!f_ck^%f$49ep)8@evme&0#gm9zg'
SECRET_KEY = os.environ.get('SECRET_KEY', '39mi+8fdxu3%3(#ewy1-4)!f_ck^%f$49ep)8@evme&0#gm9zg')
#'$KHBfPRmGK%/Vgn.[NUkXuCe'
# SECURITY WARNING: don't run with debug turned on in production!
""" if os.environ.get('ENV') == 'PRODUCTION':
    DEBUG = False
else:
    DEBUG = True """
DEBUG = False

ALLOWED_HOSTS = ['renaissance-app.herokuapp.com', '127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'accueil.apps.AccueilConfig',
    'actualite.apps.ActualiteConfig',
    'adhesion.apps.AdhesionConfig',
    'contact_us.apps.ContactUsConfig',
    'galerie.apps.GalerieConfig',
    'newsletter.apps.NewsletterConfig',
    'titrologie.apps.TitrologieConfig',
    'forum_post.apps.ForumPostConfig',
    'forum_comments.apps.ForumCommentsConfig',
    'crispy_forms',
    'bootstrap_datepicker_plus',
    'phonenumber_field',
    'django_countries',
    'widget_tweaks',
    'jet.dashboard',
    'jet',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'debug_toolbar',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'django.middleware.locale.LocaleMiddleware',
]

ROOT_URLCONF = 'renaissance.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'renaissance.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql', #on utilise l'adaptateur postgresql
        'NAME': 'renaissance', # le nom de notre base de donn√©es
        'USER': 'salma',
        'PASSWORD': '',
        'HOST': '',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

CRISPY_TEMPLATE_PACK = 'bootstrap4'
#configuration de mailgun
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False
EMAIL_HOST = "smtp.gmail.com" 
EMAIL_HOST_USER = "fck2645@gmail.com" 
EMAIL_HOST_PASSWORD = "Dieuaidemoi1#" 
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER 
EMAIL_PORT = 587

# Internationalization
INTERNAL_IPS = ['127.0.0.1']
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'fr'


TIME_ZONE = 'Africa/Abidjan'

USE_I18N = True

USE_L10N = True

USE_TZ = True

JET_DEFAULT_THEME = 'green'
JET_SIDE_MENU_COMPACT = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/
STATIC_URL = '/static/'
PROJECT_DIR = os.path.dirname(os.path.abspath(__file__))
STATIC_ROOT = os.path.join(PROJECT_DIR, 'static')

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

if os.environ.get('ENV') == 'PRODUCTION':
    
    # Static files settings
    PROJECT_DIR = os.path.dirname(os.path.abspath(__file__))

    STATIC_ROOT = os.path.join(PROJECT_DIR, 'staticfiles')

    # Extra places for collectstatic to find static files.
    STATICFILES_DIRS = (
        os.path.join(PROJECT_DIR, 'static'),
    )
    STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
    
    db_from_env = dj_database_url.config(conn_max_age=500)
    DATABASES['default'].update(db_from_env)

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, "media")